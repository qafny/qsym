//Simple Had application
method lambdatest(n:nat, q : Q[n], p: Q[n], a : nat, N: nat)
  requires { q[0, n), p[0, n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| k ⟩ }
  ensures  { q[0, n), p[0, n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| a * k % N ⟩ }
{
  //unitary operator on p[0, n) 
  p[0, n) *= λ (x => |a * x % N⟩);
}



//sp(S, P) = ∃x0. x = S[x0/x] /\ P[x0/x]
// ∃ can be dropped when P does not contain x0; 
// ∃ can be dropped when x0 is fully determined by an equality;
// sp(S, P) = P /\ S when x does not occur as a free variable in P

predicate: q[0, n), p[0,n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| k ⟩ 
loc(u) = q[0, n), p[0,n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| k ⟩ 
{
  p[0, n] *= λ (x => |a * x % N⟩);
}
∃u0. loc(u0) = q[0, n), p[0,n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| k ⟩ 
          /\ loc(u) = q[0, n), p[0,n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| |a * k % N⟩ ⟩ 
=== True /\ loc(u) = q[0, n), p[0,n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| |a * k % N⟩ ⟩ 
=== loc(u) = q[0, n), p[0,n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| |a * k % N⟩ ⟩ 
