//Simple Had application
method postHad(n:nat, q : Q[n], p : Q[n], base: nat, N:nat)
  requires { q[0, n), p[0, n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩ | (base ^ k) % N ⟩ }
  ensures  { q[0, n), p[0, n) : en(2) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1/sqrt(2^n) * ω (j * ((base ^ k) % N) , 2) | k ⟩ | j ⟩ }
{
  // 
  p[0,n) *= H;
  //(en)q[0,n); //it is best if we do not need this
}

//sp(S, P) = ∃x0. x = S[x0/x] /\ P[x0/x]

predicate: q[0, n), p[0, n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩ | (base ^ k) % N ⟩
loc(u) = q[0, n), p[0, n) : en(1)
value(u) = ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩ | (base ^ k) % N ⟩
{
  p[0,n) *= H; //translate to x => ∑ j ∈ [0, 2^n) . 1/sqrt(2^n) ω(j * x, 2) | j ⟩                                
}

loc(u0) = q[0, n), p[0, n) : en(1)
value(u0) = ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| k ⟩
/\ loc(u) = q[0, n), p[0, n) : en(2)
/\ value(u) = ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1 / (2^n) * ω(j * ((base ^ k) % N), 2) | k ⟩ | j ⟩ 