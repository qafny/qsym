//Simple Had application
method hadtest(n:nat, q : Q[n], p: Q[n])
  requires { q[0, n), p[0,n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩| k ⟩ }
  ensures  { q[0, n), p[0,n) : en(2) ↦ ∑ j ∈ [0, 2^n) . ∑ k ∈ [0, 2^n) . 1 / (2^n) * ω(j * k, 2) | j ⟩| k ⟩ }
{
  // induce superposition on the first qubit
  q[0,n) *= H;
  //assert { q [0] : had ↦ ⊗ i . (1) }; 
  // always take the ith qubit as the controller 
  //if (q[0]) { q[1]  *= λ (x => |(x + 1) % 2 ⟩); } //can be remove the % 2, since q[1] is one qubit, why the type checking cannot infer that the % 2 is unnecessary
}
