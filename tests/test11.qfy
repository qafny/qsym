//Simple Had application
method conditionaltest4(n:nat, q : Q[n], p : Q[n], r : Q[1], u : Q[1], N:nat)
  requires { q[0,n), p[0,n) : en(2) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1/2^n | k ⟩ | j ⟩ }
  requires { r[0, 1) : nor ↦ |0⟩ }
  requires { u[0, 1) : nor ↦ |0⟩ }
  ensures  { q[0,n), p[0,n), u[0, 1), r[0, 1) : en(3) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . ∑ i ∈ [0, 2) . 1/2^n * (j < N == 1) | k ⟩ | j ⟩ | 1 ⟩ | i ⟩ + ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1/2^n * (j < N == 0) | k ⟩ | j ⟩ | 0 ⟩ | 0 ⟩  }
{

  if (p < N @ u[0]) // mergestate q[0,n), p[0,n), u[0, 1) ↦  ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1/2^n * (p < N == 1) | k ⟩ | j ⟩ | 1 ⟩
                    //    +  ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1/2^n * (p < N == 0) | k ⟩ | j ⟩ | 0 ⟩
  { 
    r[0, 1) *= H; //q[0,n), p[0,n), u[0, 1) ↦  ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . ∑ i ∈ [0, 2) . 1/2^n * (p < N == 1) | k ⟩ | j ⟩ | 1 ⟩ | i ⟩ 
                  //      +  ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1/2^n * (p < N == 0) | k ⟩ | j ⟩ | 0 ⟩
  }

}
