//Simple Had application
method postQFT(n:nat, q : Q[n], p : Q[n], base: nat, N:nat)
  requires { q[0, n), p[0, n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩ | (base ^ k) % N ⟩ }
  ensures  { q[0, n), p[0, n) : en(2) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1/sqrt(2^n) * ω (j * k , 2^n) | j ⟩ | (base ^ k) % N ⟩ }
{
  // induce superposition on the first qubit
  q[0,n) *= QFT;
  //(en)q[0,n); //it is best if we do not need this
}

//
predicate: q[0, n), p[0, n) : en ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩ | (base ^ k) % N ⟩
loc(u) = q[0, n), p[0, n) : en ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩ | (base ^ k) % N ⟩
{
  q[0,n) *= QFT; // translate to x => ∑ j ∈ [0, 2^n) . 1/sqrt(2^n) ω(j * x, 2^n) | j ⟩ 
                                
}


∃u0. loc(u0) = q[0, n), p[0, n) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩ | (base ^ k) % N ⟩
/\ loc(u) = q[0, n), p[0, n) : en(2) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1 / sqrt(2^n) * ω (j * k , 2^n) | j ⟩ | (base ^ k) % N ⟩ 
=== loc(u) = q[0, n), p[0, n) : en(2) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2^n) . 1 / sqrt(2^n) * ω (j * k , 2^n) | j ⟩ | (base ^ k) % N ⟩ 
