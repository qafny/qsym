//Simple Had application
method conditionaltest3(n:nat, q : Q[n], p : Q[1])
  requires { q[0, n), p[0, 1) : en(1) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) | k ⟩ | k % 2 ⟩ }
  ensures  { q[0, n), p[0, 1) : en(2) ↦ ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2) . 1/sqrt(2^n) * 1/sqrt(2) * ω (j * (k % 2), 2)| k ⟩ | j * k % 2⟩ }
  //assuming q[0] is LSB
{ 
  if (q[0]) { p[0, 1) *= H; } //q[i] is En, and it's not individual locus, encode the predicate to states
  //(en)q[0,n); //it is best if we do not need this
}
//q[0] = k%2 q[1] = k>>1 % 2 ... need to add bitshift to Qafny
//q[0, n), p[0, 1) : en(2) ↦ ∑ k ∈ [0, 2^n) . (k%2 == 0) * 1/sqrt(2^n) | k ⟩ | k % 2 ⟩ + ∑ k ∈ [0, 2^n) . ∑ j ∈ [0, 2) . (k%2 == 1) * 1/sqrt(2^n) * 1/sqrt(2) * ω (j * (k % 2), 2)| k ⟩ | j ⟩

//what if it is any q[i] ==> k/2^i % 2
//en(2) ↦ ∑ k ∈ [0, 2^n) . 1/sqrt(2^n) * ( k >> i & 1 == 0)| k ⟩ | k % 2 ⟩ 
+ ∑ k ∈ [0, 2^n) . j ∈ [0, 2) . 1/sqrt(2^n) . 1/sqrt(2) *  ω (j * (k % 2), 2) * (k >> i & 1 == 1)| k ⟩ | j ⟩